<template>
    <Head title="ูููุฏ ุงูุฃูุฏุงู ุงูุชุนููููุฉ - ููุตุฉ ููุนูู" />

    <ArabicDashboardLayout>
        <div class="min-h-screen bg-gray-50 overflow-auto" dir="rtl">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
                <!-- Header -->
                <div class="flex items-centeconst saveContent = async () => {
    try {
        const csrfToken = document.querySelector('meta[name="csrf-token"]')?.getAttribute('content') || '';
        
        const response = await fetch('/ai/save-content', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json',
                'X-CSRF-TOKEN': csrfToken
            },
            body: JSON.stringify({
                type: 'objectives',
                title: `ุฃูุฏุงู ุชุนููููุฉ - ${form.value.subject} - ${form.value.topic}`,
                content: generatedContent.value,
                metadata: {
                    subject: form.value.subject,
                    grade: form.value.grade,
                    topic: form.value.topic,
                    objectives_count: form.value.objectivesCount,
                    bloom_levels: form.value.bloomLevels
                }
            })
        });
        
        if (!response.ok) {
            throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }
        
        const data = await response.json();
        
        if (data.success) {
            alert('ุชู ุญูุธ ุงููุญุชูู ุจูุฌุงุญ!')
        } else {
            throw new Error(data.message || 'ูุดู ูู ุญูุธ ุงููุญุชูู');
        }
    } catch (error) {
        console.error('Error saving content:', error)
        alert('ูุดู ูู ุญูุธ ุงููุญุชูู. ูุฑุฌู ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู.')
    }
}-8">
                    <div>
                        <h2 class="text-3xl font-bold text-gray-800 flex items-center">
                            <span class="text-4xl ml-3">๐ฏ</span>
                            ูููุฏ ุงูุฃูุฏุงู ุงูุชุนููููุฉ
                        </h2>
                        <p class="text-gray-600 mt-1">
                            ุงุญุตู ุนูู ุฃูุฏุงู ุชุนููููุฉ ูุตุงุบุฉ ุจุงุญุชุฑุงููุฉ ูููุงู ูุชุตููู ุจููู
                        </p>
                    </div>
                </div>

                <!-- Main Content -->
                <div class="bg-white rounded-xl shadow-sm p-6 overflow-auto">
                    <form @submit.prevent="generateObjectives" class="space-y-6">
                        <!-- Lesson Information -->
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div>
                                <label for="subject" class="block text-sm font-medium text-gray-700 mb-2">
                                    ุงููุงุฏุฉ ุงูุฏุฑุงุณูุฉ
                                </label>
                                <input
                                    id="subject"
                                    v-model="form.subject"
                                    type="text"
                                    class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                                    placeholder="ูุซู: ุงูุฑูุงุถูุงุชุ ุงูุนูููุ ุงููุบุฉ ุงูุนุฑุจูุฉ"
                                    required
                                />
                            </div>

                            <div>
                                <label for="grade" class="block text-sm font-medium text-gray-700 mb-2">
                                    ุงูุตู ุงูุฏุฑุงุณู
                                </label>
                                <input
                                    id="grade"
                                    v-model="form.grade"
                                    type="text"
                                    class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                                    placeholder="ูุซู: ุงูุตู ุงูุฎุงูุณ ุงูุงุจุชุฏุงุฆู"
                                    required
                                />
                            </div>
                        </div>

                        <!-- Lesson Topic -->
                        <div>
                            <label for="topic" class="block text-sm font-medium text-gray-700 mb-2">
                                ููุถูุน ุงูุฏุฑุณ
                            </label>
                            <input
                                id="topic"
                                v-model="form.topic"
                                type="text"
                                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                                placeholder="ูุซู: ุนูููุฉ ุงูุถุฑุจุ ุงููุจุงุชุงุชุ ููุงุนุฏ ุงูุฅููุงุก"
                                required
                            />
                        </div>

                        <!-- Learning Domains -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">
                                ุงููุฌุงูุงุช ุงูุชุนููููุฉ ุงููุทููุจุฉ
                            </label>
                            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                                <label class="flex items-center">
                                    <input 
                                        type="checkbox" 
                                        v-model="form.domains" 
                                        value="cognitive"
                                        class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50"
                                    />
                                    <span class="mr-2">ุงููุนุฑูู (ุงููุนุฑูุฉ ูุงูููู)</span>
                                </label>
                                <label class="flex items-center">
                                    <input 
                                        type="checkbox" 
                                        v-model="form.domains" 
                                        value="affective"
                                        class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50"
                                    />
                                    <span class="mr-2">ุงููุฌุฏุงูู (ุงูุงุชุฌุงูุงุช ูุงูููู)</span>
                                </label>
                                <label class="flex items-center">
                                    <input 
                                        type="checkbox" 
                                        v-model="form.domains" 
                                        value="psychomotor"
                                        class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50"
                                    />
                                    <span class="mr-2">ุงูููุงุฑู (ุงูุฃุฏุงุก ุงูุนููู)</span>
                                </label>
                            </div>
                        </div>

                        <!-- Bloom's Taxonomy Levels -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">
                                ูุณุชููุงุช ุชุตููู ุจููู ุงููุทููุจุฉ
                            </label>
                            <div class="grid grid-cols-2 md:grid-cols-3 gap-4">
                                <label class="flex items-center">
                                    <input 
                                        type="checkbox" 
                                        v-model="form.bloomLevels" 
                                        value="remember"
                                        class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50"
                                    />
                                    <span class="mr-2">ุงูุชุฐูุฑ</span>
                                </label>
                                <label class="flex items-center">
                                    <input 
                                        type="checkbox" 
                                        v-model="form.bloomLevels" 
                                        value="understand"
                                        class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50"
                                    />
                                    <span class="mr-2">ุงูููู</span>
                                </label>
                                <label class="flex items-center">
                                    <input 
                                        type="checkbox" 
                                        v-model="form.bloomLevels" 
                                        value="apply"
                                        class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50"
                                    />
                                    <span class="mr-2">ุงูุชุทุจูู</span>
                                </label>
                                <label class="flex items-center">
                                    <input 
                                        type="checkbox" 
                                        v-model="form.bloomLevels" 
                                        value="analyze"
                                        class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50"
                                    />
                                    <span class="mr-2">ุงูุชุญููู</span>
                                </label>
                                <label class="flex items-center">
                                    <input 
                                        type="checkbox" 
                                        v-model="form.bloomLevels" 
                                        value="evaluate"
                                        class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50"
                                    />
                                    <span class="mr-2">ุงูุชูููู</span>
                                </label>
                                <label class="flex items-center">
                                    <input 
                                        type="checkbox" 
                                        v-model="form.bloomLevels" 
                                        value="create"
                                        class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50"
                                    />
                                    <span class="mr-2">ุงูุฅุจุฏุงุน</span>
                                </label>
                            </div>
                        </div>

                        <!-- Number of Objectives -->
                        <div>
                            <label for="numberOfObjectives" class="block text-sm font-medium text-gray-700 mb-2">
                                ุนุฏุฏ ุงูุฃูุฏุงู ุงููุทููุจุฉ
                            </label>
                            <select
                                id="numberOfObjectives"
                                v-model="form.numberOfObjectives"
                                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                            >
                                <option value="3">3 ุฃูุฏุงู</option>
                                <option value="5">5 ุฃูุฏุงู</option>
                                <option value="7">7 ุฃูุฏุงู</option>
                                <option value="10">10 ุฃูุฏุงู</option>
                            </select>
                        </div>

                        <!-- Additional Notes -->
                        <div>
                            <label for="additionalNotes" class="block text-sm font-medium text-gray-700 mb-2">
                                ููุงุญุธุงุช ุฅุถุงููุฉ
                            </label>
                            <textarea
                                id="additionalNotes"
                                v-model="form.additionalNotes"
                                rows="3"
                                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                                placeholder="ุฃู ูุชุทูุจุงุช ุฎุงุตุฉ ุฃู ุณูุงู ุฅุถุงูู ููุฃูุฏุงู..."
                            ></textarea>
                        </div>

                        <!-- Generate Button -->
                        <div class="flex justify-center">
                            <button
                                type="submit"
                                :disabled="loading"
                                class="bg-blue-600 text-white px-8 py-3 rounded-lg font-semibold hover:bg-blue-700 transition-colors shadow-sm disabled:opacity-50 disabled:cursor-not-allowed flex items-center"
                            >
                                <span v-if="loading" class="ml-2">
                                    <svg class="animate-spin h-5 w-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                    </svg>
                                </span>
                                {{ loading ? 'ุฌุงุฑู ุงูุชูููุฏ...' : 'ุชูููุฏ ุงูุฃูุฏุงู ุงูุชุนููููุฉ' }}
                            </button>
                        </div>
                    </form>

                    <!-- Generated Content -->
                    <div v-if="generatedContent" class="mt-8 border-t pt-8">
                        <div class="flex items-center justify-between mb-4">
                            <h3 class="text-xl font-bold text-gray-800">ุงูุฃูุฏุงู ุงูุชุนููููุฉ ุงููููุฏุฉ</h3>
                            <div class="flex space-x-2 space-x-reverse">
                                <button
                                    @click="copyToClipboard"
                                    class="bg-gray-100 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-200 transition-colors flex items-center text-sm"
                                >
                                    <span class="ml-2">๐</span>
                                    ูุณุฎ
                                </button>
                                <button
                                    @click="saveContent"
                                    class="bg-green-100 text-green-700 px-4 py-2 rounded-lg hover:bg-green-200 transition-colors flex items-center text-sm"
                                >
                                    <span class="ml-2">๐พ</span>
                                    ุญูุธ
                                </button>
                            </div>
                        </div>
                        <div class="bg-gray-50 rounded-lg p-6 prose prose-lg max-w-none">
                            <div v-html="formattedContent"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </ArabicDashboardLayout>
</template>

<script setup>
import { Head } from '@inertiajs/vue3'
import ArabicDashboardLayout from '@/layouts/ArabicDashboardLayout.vue'
import { ref, computed } from 'vue'
import { router } from '@inertiajs/vue3'

const form = ref({
    subject: '',
    grade: '',
    topic: '',
    domains: [],
    bloomLevels: [],
    numberOfObjectives: '5',
    additionalNotes: ''
})

const generatedContent = ref('')
const loading = ref(false)

const formattedContent = computed(() => {
    return generatedContent.value.replace(/\n/g, '<br>')
})

const generateObjectives = async () => {
    loading.value = true
    try {
        const csrfToken = document.querySelector('meta[name="csrf-token"]')?.getAttribute('content') || '';
        const response = await fetch('/ai/generate-objectives', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json',
                'X-CSRF-TOKEN': csrfToken
            },
            body: JSON.stringify(form.value)
        })
        
        if (!response.ok) {
            throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }
        
        const data = await response.json()
        
        if (data.success) {
            generatedContent.value = data.content;
        } else {
            throw new Error(data.error || 'ุฎุทุฃ ุบูุฑ ูุนุฑูู');
        }
    } catch (error) {
        console.error('Error generating objectives:', error)
        alert('ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุชูููุฏ ุงูุฃูุฏุงู. ูุฑุฌู ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู.')
    } finally {
        loading.value = false
    }
}

const copyToClipboard = async () => {
    try {
        await navigator.clipboard.writeText(generatedContent.value)
        alert('ุชู ูุณุฎ ุงููุญุชูู ุจูุฌุงุญ!')
    } catch (error) {
        console.error('Error copying to clipboard:', error)
        alert('ูุดู ูู ูุณุฎ ุงููุญุชูู')
    }
}

const saveContent2 = async () => {
    try {
        const csrfToken = document.querySelector('meta[name="csrf-token"]')?.getAttribute('content') || '';
        
        const response = await fetch('/ai/save-content', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json',
                'X-CSRF-TOKEN': csrfToken
            },
            body: JSON.stringify({
                type: 'learning_objectives',
                title: `ุฃูุฏุงู ุชุนููููุฉ - ${form.value.subject} - ${form.value.topic}`,
                content: generatedContent.value,
                metadata: {
                    subject: form.value.subject,
                    grade: form.value.grade,
                    topic: form.value.topic,
                    domains: form.value.domains,
                    bloom_levels: form.value.bloomLevels
                }
            })
        });
        
        if (!response.ok) {
            throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }
        
        const data = await response.json();
        
        if (data.success) {
            alert('ุชู ุญูุธ ุงููุญุชูู ุจูุฌุงุญ!')
        } else {
            throw new Error(data.message || 'ูุดู ูู ุญูุธ ุงููุญุชูู');
        }
    } catch (error) {
        console.error('Error saving content:', error)
        alert('ูุดู ูู ุญูุธ ุงููุญุชูู')
    }
}
</script>